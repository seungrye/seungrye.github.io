<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on HANDMADE LOG</title><link>https://seungrye.github.io/tags/python/</link><description>Recent content in python on HANDMADE LOG</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 30 Oct 2021 15:25:05 +0000</lastBuildDate><atom:link href="https://seungrye.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Font family not found issue on matplot</title><link>https://seungrye.github.io/posts/2021-10-30-matplot-fontfamily-not-found-issue/</link><pubDate>Sat, 30 Oct 2021 15:25:05 +0000</pubDate><guid>https://seungrye.github.io/posts/2021-10-30-matplot-fontfamily-not-found-issue/</guid><description>파이썬으로 matplot 를 사용할때, 한글 폰트가 다음과 유사한 에러로 정상 출력되지 않는 현상이 발생하는 경우가 있습니다. $ python3 ~/hello.py findfont: Font family [&amp;#39;NanumGothic&amp;#39;] not found. Falling back to DejaVu Sans. /home/seungrye/.local/lib/python3.9/site-packages/matplotlib/backends/backend_agg.py:240: RuntimeWarning: Glyph 49340 missing from current</description></item><item><title>Show code of exception occurred when call exec on python</title><link>https://seungrye.github.io/posts/2020-08-04-show_code_of_exception_occurred_when_call_exec_on_python/</link><pubDate>Tue, 04 Aug 2020 15:29:30 +0900</pubDate><guid>https://seungrye.github.io/posts/2020-08-04-show_code_of_exception_occurred_when_call_exec_on_python/</guid><description>python 에서 exec 함수를 통해 임의의 코드를 수행시킬때, 예외가 발생했다면, 예외가 발생한 부분을 정확히 알고 싶을때 어떻게 할 수 있을까요@.@? 다음과 같이 traceback 을 서식화</description></item><item><title>NestedDefaultOrderedDict on Python</title><link>https://seungrye.github.io/posts/2020-07-28-nesteddefaultordereddict-on-python/</link><pubDate>Tue, 28 Jul 2020 13:53:25 +0900</pubDate><guid>https://seungrye.github.io/posts/2020-07-28-nesteddefaultordereddict-on-python/</guid><description>python 3.7 부터는 dict 의 order 가 보장되지만, 낮은 버전의 python 에서는 order 이 보장되지 않을 수 있습니다. (3.5 에서는 order 가 보장되지 않음. OrderedDict 를 사용해야 함.) 그리고, 다음과 같이 nested</description></item><item><title>Convert nested dict to ordered dict on Python</title><link>https://seungrye.github.io/posts/2020-07-23-convert-nested-dict-to-ordereddict-on-python/</link><pubDate>Thu, 23 Jul 2020 16:56:10 +0900</pubDate><guid>https://seungrye.github.io/posts/2020-07-23-convert-nested-dict-to-ordereddict-on-python/</guid><description>다음과 같이 충첩된 dict 가 있다고 할때, dict_ = { &amp;#39;a&amp;#39;: 1, &amp;#39;b&amp;#39;: [2, 3, 4], &amp;#39;c&amp;#39;: { &amp;#39;d&amp;#39;: 5 }, &amp;#39;d&amp;#39;: &amp;#39;6789&amp;#39; } ordered dict 로 변환하기 위해서는 다음과 같이 재귀 함수를 만들어서 변환할 수 있다. from collections import OrderedDict def</description></item><item><title>Initialize nested dict on Python</title><link>https://seungrye.github.io/posts/2020-07-21-initialize-nested-dict-on-python/</link><pubDate>Tue, 21 Jul 2020 10:37:57 +0900</pubDate><guid>https://seungrye.github.io/posts/2020-07-21-initialize-nested-dict-on-python/</guid><description>#!/usr/bin/perl my %dict_ = (); $dict-&amp;gt;{&amp;#39;hello&amp;#39;}-&amp;gt;{&amp;#39;world&amp;#39;} = &amp;#39;PERL&amp;#39;; print &amp;#34;dict_ : $dict \n&amp;#34;; print &amp;#34;hello : $dict-&amp;gt;{&amp;#39;hello&amp;#39;} \n&amp;#34;; print &amp;#34;world : $dict-&amp;gt;{&amp;#39;hello&amp;#39;}-&amp;gt;{&amp;#39;world&amp;#39;} \n&amp;#34;; 출력 결과는 다음과 같습니다. dict_ : HASH(0x5587f28af740) hello : HASH(0x5587f28c7530) world : PERL 파이썬에서 동일하게 코드를 구성하면 어떻게 동작할까영@</description></item><item><title>Iterate over multiple list in a `for` loop</title><link>https://seungrye.github.io/posts/2020-07-08-python-iterate-over-multiple-list-in-a-for-loop/</link><pubDate>Wed, 08 Jul 2020 11:45:14 +0900</pubDate><guid>https://seungrye.github.io/posts/2020-07-08-python-iterate-over-multiple-list-in-a-for-loop/</guid><description>python (python 3) 에서 다수의 list 가 있을때, 이 list 들을 한번의 loop 로 모두 순회하려면 다음과 같이 itertools 를 사용하면 됩니다. #!/usr/bin/python3 import itertools list_a = [&amp;#39;1&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;3&amp;#39;] list_b = [&amp;#39;7&amp;#39;, &amp;#39;8&amp;#39;, &amp;#39;9&amp;#39;] list_c = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;] for v in itertools.chain(list_a, list_b, list_c): print(v,</description></item><item><title>SHA256 hash on File via Python</title><link>https://seungrye.github.io/posts/2019-11-10-sha256-file-via-python/</link><pubDate>Sun, 10 Nov 2019 19:34:25 +0900</pubDate><guid>https://seungrye.github.io/posts/2019-11-10-sha256-file-via-python/</guid><description>&lt;p>When check hash code of file with python.&lt;/p></description></item><item><title>Howto move files under child directories to somewhere via Python</title><link>https://seungrye.github.io/posts/2019-11-02-howto-move-files-under-child-directories-to-somewhere-via-python/</link><pubDate>Sat, 02 Nov 2019 02:13:42 +0900</pubDate><guid>https://seungrye.github.io/posts/2019-11-02-howto-move-files-under-child-directories-to-somewhere-via-python/</guid><description>&lt;p>When I need to move all &lt;code>.zip&lt;/code> files to &lt;code>/sharedfolders&lt;/code>, how should I do?&lt;/p></description></item><item><title>Python regex contents in curly braces</title><link>https://seungrye.github.io/posts/2019-06-20-python-regex-contents-in-curly-braces/</link><pubDate>Thu, 20 Jun 2019 23:18:49 +0900</pubDate><guid>https://seungrye.github.io/posts/2019-06-20-python-regex-contents-in-curly-braces/</guid><description>&lt;p>When I want to extract contents between curly braces using python+regex.&lt;/p></description></item></channel></rss>